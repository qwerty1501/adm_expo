# Generated by Django 3.2.9 on 2023-06-14 11:54

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='DopParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=300, null=True, verbose_name='Ф.И.О')),
                ('position', models.CharField(blank=True, max_length=300, null=True, verbose_name='Должность')),
                ('phone', models.CharField(blank=True, max_length=300, null=True, verbose_name='Телефон')),
                ('whatsapp_phone', models.CharField(blank=True, max_length=300, null=True, verbose_name='WhatsApp')),
            ],
            options={
                'verbose_name': 'Контактные лица',
                'verbose_name_plural': 'Контактные лица',
                'db_table': 'dop_participant',
            },
        ),
        migrations.CreateModel(
            name='Industry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, verbose_name='Наименование отраслей')),
            ],
            options={
                'verbose_name': 'Отрасль',
                'verbose_name_plural': 'Отрасль',
                'db_table': 'industry',
            },
        ),
        migrations.CreateModel(
            name='MassMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_certificate_smi', models.ImageField(blank=True, null=True, upload_to='images/certificate-smi', verbose_name='Загрузите вашего журналистского удостоверения в  png или jpg')),
                ('image_logo_smi', models.ImageField(blank=True, null=True, upload_to='images/logo-smi', verbose_name='Загрузите логотип компании в png или jpg')),
                ('organization_smi', models.CharField(blank=True, max_length=300, null=True, verbose_name='Полное юридическое наименование организации')),
                ('address_smi', models.CharField(blank=True, max_length=300, null=True, verbose_name='Юридический адрес')),
                ('web_site', models.URLField(blank=True, null=True, verbose_name='Веб-сайт')),
                ('work_phone_smi', models.CharField(blank=True, max_length=300, null=True, verbose_name='Рабочий телефон')),
                ('email_smi', models.EmailField(blank=True, default=None, max_length=300, null=True, unique=True, verbose_name='Email')),
                ('instagram', models.URLField(blank=True, null=True, verbose_name='Instagram')),
                ('facebook', models.URLField(blank=True, null=True, verbose_name='Facebook')),
                ('twitter', models.URLField(blank=True, null=True, verbose_name='Twitter')),
                ('smi_team', models.CharField(blank=True, max_length=300, null=True, verbose_name='Сколько у вас человек в команде?')),
            ],
            options={
                'verbose_name': 'ModelName',
                'verbose_name_plural': 'ModelNames',
                'db_table': 'mass_media',
            },
        ),
        migrations.CreateModel(
            name='ParticipationSector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, verbose_name='Наименование сектора')),
            ],
            options={
                'verbose_name': 'Выберите сектор участия',
                'verbose_name_plural': 'Выберите сектор участии',
                'db_table': 'participation_sector',
            },
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(blank=True, max_length=300, null=True, verbose_name='Наименование бренда')),
                ('image_logo_participant', models.ImageField(blank=True, null=True, upload_to='images/participant', verbose_name='Загрузите логотип компании в png или jpg')),
                ('organization_participant', models.CharField(blank=True, max_length=300, null=True, verbose_name='Полное юридическое наименование организации')),
                ('address_participant', models.CharField(blank=True, max_length=300, null=True, verbose_name='Юридический адрес')),
                ('inn', models.CharField(blank=True, max_length=300, null=True, verbose_name='ИНН')),
                ('p_c', models.CharField(blank=True, max_length=300, null=True, verbose_name='Р/С')),
                ('bik', models.CharField(blank=True, max_length=300, null=True, verbose_name='БИК')),
                ('okpo', models.CharField(blank=True, max_length=300, null=True, verbose_name='ОКПО')),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to='file/register', verbose_name='Загрузите свидетельство регистрации в pdf')),
                ('name', models.CharField(blank=True, max_length=300, null=True, verbose_name='Ф.И.О руководителя')),
                ('position', models.CharField(blank=True, max_length=300, null=True, verbose_name='Должность')),
                ('company', models.CharField(blank=True, max_length=300, null=True, verbose_name='Деятельность компании')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('web_site', models.URLField(blank=True, null=True, verbose_name='Веб-сайт')),
                ('work_phone_smi', models.CharField(blank=True, max_length=300, null=True, verbose_name='Рабочий телефон')),
                ('email_participant', models.EmailField(blank=True, default=None, max_length=300, null=True, unique=True, verbose_name='Email')),
                ('instagram', models.URLField(blank=True, null=True, verbose_name='Instagram')),
                ('facebook', models.URLField(blank=True, null=True, verbose_name='Facebook')),
                ('twitter', models.URLField(blank=True, null=True, verbose_name='Twitter')),
                ('dop_participant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.dopparticipant', verbose_name='Выберите отрасль')),
                ('industry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.industry', verbose_name='Выберите отрасль')),
                ('participation_sector', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.participationsector', verbose_name='Выберите сектор участия (с условиями участия каждого сектора можно ознакомится)')),
            ],
            options={
                'verbose_name': 'Участник',
                'verbose_name_plural': 'Участники',
                'db_table': 'participant',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активный?')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Админ?')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='СуперАдмин?')),
                ('name', models.CharField(blank=True, max_length=300, null=True, verbose_name='Ф.И.О')),
                ('workEmail', models.EmailField(blank=True, default=None, max_length=254, null=True, unique=True, verbose_name='Email')),
                ('country', models.CharField(blank=True, max_length=300, null=True, verbose_name='Страна')),
                ('city', models.CharField(blank=True, max_length=300, null=True, verbose_name='Город')),
                ('birth', models.CharField(blank=True, max_length=300, null=True, verbose_name='Дата рождения')),
                ('image_id_one', models.ImageField(blank=True, null=True, upload_to='images/passport_one', verbose_name='Аватар')),
                ('image_id_two', models.ImageField(blank=True, null=True, upload_to='images/passport_two', verbose_name='Аватар')),
                ('image_id_three', models.ImageField(blank=True, null=True, upload_to='images/passport_three', verbose_name='Аватар')),
                ('workPhone', models.CharField(blank=True, max_length=300, null=True, verbose_name='Телефон')),
                ('personalPhone', models.CharField(blank=True, max_length=300, null=True, verbose_name='WhatsApp')),
                ('visit', models.BooleanField(verbose_name='Посещение на HIT EXPO')),
                ('participation', models.BooleanField(verbose_name='Участие на HIT EXPO')),
                ('projects', models.BooleanField(verbose_name='Поиске проектов')),
                ('other_one', models.BooleanField(verbose_name='Другое')),
                ('instagram', models.BooleanField(verbose_name='Инстаграм')),
                ('tv_radio', models.BooleanField(verbose_name='ТВ, Радио')),
                ('news_portals', models.BooleanField(verbose_name='Новостные порталы')),
                ('other_two', models.BooleanField(verbose_name='Другое')),
                ('position', models.CharField(blank=True, max_length=300, null=True, verbose_name='Должность')),
                ('email', models.EmailField(blank=True, default=None, max_length=254, null=True, unique=True, verbose_name='Электронная почта')),
                ('password', models.CharField(default='pbkdf2_sha256$260000$kQRxcz84lqIChePQaspylc$RN8Gv9AU7e6vL9ecBpp7+YuDfCzWbaOUaJMBRsXQxi0=', max_length=128, verbose_name='Пароль')),
                ('avatarHidden', models.BooleanField(default=True)),
                ('uniqueId', models.UUIDField(blank=True, null=True, unique=True, verbose_name='Уникальный id')),
                ('resetPasswordUUID', models.UUIDField(blank=True, null=True, verbose_name='Ссылка для восстановления пароля')),
                ('resetPasswordDate', models.BigIntegerField(blank=True, null=True, verbose_name='Время восстановления пароля')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('mass_media', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.massmedia', verbose_name='СМИ')),
                ('participant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.participant', verbose_name='СМИ')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
    ]
